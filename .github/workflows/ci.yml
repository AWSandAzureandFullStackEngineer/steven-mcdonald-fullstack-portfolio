name: Continuous Integration

on:
  workflow_run:
    workflows: ["Terraform"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22"
      - name: Build backend
        run: go build -v ./...
        working-directory: backend
      - name: Test backend
        run: go test -v ./...
        working-directory: backend
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
      - name: Install Yarn
        run: npm install -g yarn
      - name: Install frontend dependencies
        run: yarn install --frozen-lockfile
        working-directory: ./frontend
      - name: Build frontend
        run: yarn build
        working-directory: ./frontend
      - name: Test frontend
        run: yarn test
        working-directory: ./frontend
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }} # AWS region
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }} # AWS account ID
          IMAGE_NAME_BACKEND: ${{ secrets.IMAGE_NAME_BACKEND }}
          IMAGE_TAG: ${{ secrets.IMAGE_TAG }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # AWS access key ID
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS secret access key
          GITHUB_RUN_NUMBER: ${{ github.run_number }} # Unique identifier for the workflow run

      - name: "Get Login to AWS ECR"
        id: ecr-login
        uses: thalesvon/ecr-login@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_DEFAULT_OUTPUT: json
          AWS_REGION: us-east-1
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          args: "get-login --no-include-email --region ${AWS_REGION}"
      - name: "Docker Login"
        run: ${{ steps.ecr-login.outputs.login-string }}

      - name: Build Docker image for backend
        run: |
          docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME_BACKEND:$IMAGE_TAG .
          docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME_BACKEND:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME_BACKEND:$GITHUB_RUN_NUMBER

      - name: Push Docker image for backend # Push Docker image to AWS ECR
        run: docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME_BACKEND:$IMAGE_TAG

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2 # Check out the repository

      - name: Cache Node modules # Cache Node modules to speed up builds
        uses: actions/cache@v2
        with:
          path: ~/.yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Set up Node # Set up Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"

      - name: Install Yarn # Install Yarn package manager
        run: npm install -g yarn

      - name: Install frontend dependencies # Install frontend dependencies using Yarn
        run: yarn install --frozen-lockfile
        working-directory: frontend

      - name: Build frontend # Build the frontend application
        run: yarn build
        working-directory: frontend

        env:
          AWS_REGION: ${{ secrets.AWS_REGION }} # AWS region
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }} # AWS account ID
          IMAGE_NAME_FRONTEND: ${{ secrets.IMAGE_NAME_FRONTEND }}
          IMAGE_TAG: ${{ secrets.IMAGE_TAG }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} # AWS access key ID
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # AWS secret access key
          GITHUB_RUN_NUMBER: ${{ github.run_number }} # Unique identifier for the workflow run

      - name: Build Docker image for frontend # Build Docker image for the frontend
        run: |
          docker build -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME_FRONTEND:$IMAGE_TAG .
          docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME_FRONTEND:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME_FRONTEND:$IMAGE_TAG:$GITHUB_RUN_NUMBER   

      - name: Push Docker image for frontend # Push Docker image to AWS ECR
        run: docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_NAME_FRONTEND:$IMAGE_TAG
